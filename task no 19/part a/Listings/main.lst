C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 23:35:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include "lcd.h"
   4          
   5          #define KEYPAD_PORT P1
   6          #define DISP_PORT P2
   7          #define SegmentDisp P0
   8          
   9          sbit disp_2 = P0^2;
  10          
  11          char keypad[4][4] = {
  12              {'7', '8', '9', '/'},
  13              {'4', '5', '6', '*'},
  14              {'1', '2', '3', '-'},
  15              {'s','0','=', '+'}
  16          };
  17          
  18          typedef enum {
  19              KEY_IDLE,
  20              KEY_PRESSED,
  21              KEY_CONFIRMED
  22          } KeyState;
  23          
  24          KeyState keyStates[4][4];
  25              unsigned int row,col;
  26          
  27          
  28          void initializeKeyStates() {
  29   1        int row,col;
  30   1          for ( row = 0; row < 4; row++) {
  31   2              for ( col = 0; col < 4; col++) {
  32   3                  keyStates[row][col] = KEY_IDLE;
  33   3              }
  34   2          }
  35   1      }
  36          
  37          void displayOnSevenSegment(char key) {
  38   1          char digitPatterns[] = {
  39   1          0x3F, // 0b00111111 - 0
  40   1          0x06, // 0b00000110 - 1
  41   1          0x5B, // 0b01011011 - 2
  42   1          0x4F, // 0b01001111 - 3
  43   1          0x66, // 0b01100110 - 4
  44   1          0x6D, // 0b01101101 - 5
  45   1          0x7D, // 0b01111101 - 6
  46   1          0x07, // 0b00000111 - 7
  47   1          0x7F, // 0b01111111 - 8
  48   1          0x6F  // 0b01101111 - 9
  49   1      
  50   1      };
  51   1      
  52   1        disp_2 = 0;
  53   1        P0 = digitPatterns[key - '0'];
  54   1        delay_ms(1000);
C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 23:35:03 PAGE 2   

  55   1        disp_2 = 1;
  56   1      }
  57          
  58          void displayOnLCD(char key) {
  59   1          lcd_clear();
  60   1          lcd_write_string("KeyPressed:");
  61   1          lcd_set_cursor(1, 1);
  62   1          lcd_write_data(key);
  63   1      }
  64          
  65          void main() {
  66   1          lcd_init(); // Initialize LCD
  67   1          initializeKeyStates();
  68   1          
  69   1        
  70   1          while (1) {
  71   2              // Non-blocking keypad scanning
  72   2              for (row = 0; row < 4; row++) {
  73   3                  KEYPAD_PORT = ~(1 << row);
  74   3                  _nop_();
  75   3                  
  76   3                  for ( col = 0; col < 4; col++) {
  77   4                      if (!(KEYPAD_PORT & (1 << (col + 4)))) {
  78   5                          if (keyStates[row][col] == KEY_IDLE) {
  79   6                              keyStates[row][col] = KEY_PRESSED;
  80   6                          } else if (keyStates[row][col] == KEY_PRESSED) {
  81   6                              keyStates[row][col] = KEY_CONFIRMED;
  82   6                          }
  83   5                      } else {
  84   5                          keyStates[row][col] = KEY_IDLE;
  85   5                      }
  86   4                  }
  87   3              }
  88   2              
  89   2              // Check key states
  90   2              for ( row = 0; row < 4; row++) {
  91   3                  for ( col = 0; col < 4; col++) {
  92   4                      if (keyStates[row][col] == KEY_CONFIRMED) {
  93   5                          char key = keypad[row][col];
  94   5                          
  95   5                          // Display the pressed key on the LCD
  96   5                          displayOnLCD(key);
  97   5                          
  98   5                          // Display the pressed key on the 7-segment display
  99   5                          displayOnSevenSegment(key);
 100   5                          
 101   5                          // Reset the state machine
 102   5                          keyStates[row][col] = KEY_IDLE;
 103   5                      }
 104   4                  }
 105   3              }
 106   2              
 107   2              // Continue with other non-blocking tasks
 108   2          }
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 23:35:03 PAGE 3   

   DATA SIZE        =     36      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
