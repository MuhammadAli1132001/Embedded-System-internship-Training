C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 20:38:06 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          
   5          #include "lcd.h"
   6          #include "temp.h"
   7          #include "cal.h"
   8          #include "RTC.h"
   9          
  10          char scan_key(void);
  11          unsigned char s[30]={"ENTER 1 NO= "};
  12          unsigned char s1[30]={"ENTER 2 NO= "};
  13          unsigned char s2[30]={"OPERATOR = "};
  14          unsigned char s3[30]={"Result = "};
  15          
  16          sbit r0=P1^0;
  17          sbit r1=P1^1;
  18          sbit r2=P1^2;
  19          sbit r3=P1^3;
  20          sbit c0=P1^4;
  21          sbit c1=P1^5;
  22          sbit c2=P1^6;
  23          sbit c3=P1^7;
  24          
  25          void getAndDisplayKeysForCalculator();
  26          void processRealTimeClock();
  27          void processTemperatureMonitor();
  28          char scan_Key();
  29          
  30          
  31          typedef enum {
  32              STATE_CALCULATOR,
  33              STATE_RTC,
  34              STATE_TEMPERATURE
  35          } AppState;
  36          
  37          AppState currentState = STATE_CALCULATOR;             //initial state
  38          
  39          
  40          void getAndDisplayKeysForCalculator()
  41            {
  42   1          
  43   1         while(1){
  44   2         unsigned int k=0,m=0,n=0,r=0;
  45   2         int k2,k1;
  46   2         char key,key1;
  47   2         unsigned char ch2;
  48   2           
  49   2            lcd_init();
  50   2            
  51   2          while(s[k]!='\0')
  52   2          {
  53   3            lcd_write_data(s[k]);
  54   3            k++;
C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 20:38:06 PAGE 2   

  55   3          }
  56   2            key=scan_key();
  57   2            k2=get_num(key);
  58   2            lcd_write_data(key);
  59   2            lcd_clear();
  60   2            
  61   2          while(s2[n]!='\0')
  62   2          {
  63   3            lcd_write_data(s2[n]);
  64   3            n++;
  65   3          }
  66   2            ch2=scan_key();
  67   2            lcd_write_data(ch2);
  68   2            lcd_clear();
  69   2            
  70   2          while(s1[m]!='\0')
  71   2          {
  72   3            lcd_write_data(s1[m]);
  73   3            m++;
  74   3          }
  75   2            key1=scan_key();
  76   2            k1=get_num(key1);
  77   2            lcd_write_data(key1);
  78   2            lcd_clear();
  79   2            
  80   2          while(s3[r]!='\0')
  81   2          {
  82   3            lcd_write_data(s3[r]);
  83   3            r++;
  84   3          }
  85   2            
  86   2            switch(ch2)
  87   2            {
  88   3              case '+':
  89   3              disp_num(k1+k2);
  90   3              break;
  91   3              case '-':
  92   3              disp_num(k2-k1);
  93   3              break;
  94   3              case '*':
  95   3              disp_num(k2*k1);
  96   3              break;
  97   3              case '/':
  98   3              disp_num(k2/k1);
  99   3              break;
 100   3           }
 101   2          }
 102   1        }
 103          
 104            
 105          void  processTemperatureMonitor(){
 106   1         float temperature;
 107   1         char temperatureString[10];
 108   1        
 109   1         lcd_init();
 110   1      
 111   1        while(1)
 112   1          {
 113   2      
 114   2            //init_ds18b20();
 115   2                    
 116   2            temperature = readTemperature();
C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 20:38:06 PAGE 3   

 117   2            sprintf(temperatureString, "%.2f", temperature);
 118   2            
 119   2            //clear_lcd();
 120   2            lcd_set_cursor(0,0);
 121   2            lcd_write_string("tempreture");
 122   2            
 123   2            lcd_set_cursor(1,0);
 124   2            lcd_write_string(temperatureString);
 125   2            delay_ms(1000);
 126   2        }
 127   1        
 128   1      }
 129          
 130          void  processRealTimeClock()
 131           {
 132   1          unsigned int hour, minute, second;
 133   1          unsigned char day, month, year;
 134   1          char timeString[9];
 135   1          int datestring[12]; 
 136   1          unsigned char decimalSecond;  
 137   1          unsigned char decimalMinute;
 138   1          unsigned char decimalHour;
 139   1        
 140   1          lcd_init();         // Initialize the LCD
 141   1          DS1302_init();        // Initialize ds1302
 142   1        
 143   1           // Set initial time and date
 144   1           DS1302_SetTime(11, 03, 01); 
 145   1           //DS1302_SetDate(10, 11, 2001); 
 146   1      
 147   1          while (1)
 148   1          {   
 149   2      
 150   2              // Read time from DS1302
 151   2              DS1302_GetTime(&hour, &minute, &second);
*** WARNING C182 IN LINE 151 OF main.c: pointer to different objects
*** WARNING C182 IN LINE 151 OF main.c: pointer to different objects
*** WARNING C182 IN LINE 151 OF main.c: pointer to different objects
 152   2              DS1302_GetDate(&day, &month, &year);
 153   2              
 154   2              decimalHour = (hour >> 4) * 10 + (hour & 0x0F);
 155   2              decimalMinute = (minute >> 4) * 10 + (minute & 0x0F);
 156   2              decimalSecond = (second >> 4) * 10 + (second & 0x0F);
 157   2      
 158   2              sprintf(timeString, "%02u:%02u:%02u", hour, minute, decimalSecond);
 159   2             // lcd_clear();
 160   2              lcd_set_cursor(0, 0);
 161   2              //lcd_write_string("Time:");
 162   2              //lcd_set_cursor(0, 5);
 163   2              lcd_write_string(timeString);          // Display the time on the LCD
 164   2              
 165   2            
 166   2              // Format the date string
 167   2              sprintf(datestring, "%02u:%02u:%04u", day, month, year);
*** WARNING C182 IN LINE 167 OF main.c: pointer to different objects
 168   2             
 169   2              lcd_set_cursor(1, 0);
 170   2              lcd_write_string("Date:");
 171   2              lcd_set_cursor(1, 5);
 172   2              lcd_write_string(datestring);
*** WARNING C182 IN LINE 172 OF main.c: pointer to different objects
 173   2      
C51 COMPILER V9.60.7.0   MAIN                                                              08/23/2023 20:38:06 PAGE 4   

 174   2                delay_ms(1000);                                // Wait for one second
 175   2      
 176   2          }
 177   1      }
 178          
 179          void main() {
 180   1              char key;                                   // Initialize hardware and peripherals
 181   1          
 182   1          while (1) {
 183   2            
 184   2            
 185   2              switch (currentState) {
 186   3                  case STATE_CALCULATOR:
 187   3                      getAndDisplayKeysForCalculator();
 188   3                      break;
 189   3                  case STATE_RTC:
 190   3                      processRealTimeClock();
 191   3                      break;
 192   3                  case STATE_TEMPERATURE:
 193   3                      processTemperatureMonitor();
 194   3                      break;
 195   3              }
 196   2              
 197   2              
 198   2            //  while(key != 0);         //key naye press shawe no hissam mako
 199   2              
 200   2               key = scan_key();
 201   2              
 202   2              // Check for On/C key press to switch between applications
 203   2              if (key == 'C') {
 204   3                  currentState = (currentState + 1) % 3; // Cycle through states
 205   3                //  lcd_clear();
 206   3                  delay_ms(200);
 207   3              }
 208   2          }
 209   1      }
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    890    ----
   CONSTANT SIZE    =     52    ----
   XDATA SIZE       =    121      74
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
