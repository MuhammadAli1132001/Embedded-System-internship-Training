C51 COMPILER V9.60.7.0   LCD                                                               09/20/2023 16:44:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          // Define LCD control pins
   2          #include <reg52.h>
   3          #include "lcd.h"
   4          
   5          unsigned int i = 0;
   6          unsigned int j = 0;
   7          unsigned int digit = 0;
   8          
   9          sbit RS = P2^6;
  10          sbit RW = P2^5;
  11          sbit EN = P2^7;
  12          
  13          
  14          
  15          void delay_ms(unsigned int ms) {
  16   1        unsigned int i, j;
  17   1        for (i = 0; i < ms; i++)
  18   1          for (j = 0; j < 127; j++);
  19   1      }
  20          
  21          void lcd_write_byte(unsigned char dataa, unsigned char rs) {
  22   1        
  23   1        RS = rs;
  24   1        EN = 1;
  25   1        delay_ms(10);
  26   1        
  27   1        port0 = dataa;
  28   1      //  D0 = (dataa & 0x01);
  29   1      //  D1 = (dataa & 0x02) >> 1;
  30   1      //  D2 = (dataa & 0x04) >> 2;
  31   1      //  D3 = (dataa & 0x08) >> 3;
  32   1      //  D4 = (dataa & 0x10) >> 4;
  33   1      //  D5 = (dataa & 0x20) >> 5;
  34   1      //  D6 = (dataa & 0x40) >> 6;
  35   1      //  D7 = (dataa & 0x80) >> 7;
  36   1        delay_ms(10);
  37   1        EN = 0;
  38   1      }
  39          
  40          void lcd_write_command(unsigned char command) {
  41   1        RW = 0;
  42   1        lcd_write_byte(command, 0);
  43   1      }
  44          
  45          void lcd_write_data(unsigned char dataa) {
  46   1        RW = 0;
  47   1        lcd_write_byte(dataa, 1);
  48   1      }
  49          
  50          void lcd_clear(void) {
  51   1        lcd_write_command(LCD_CLEAR_DISPLAY);
  52   1      }
  53          
  54          void lcd_blink_cursor(void){
C51 COMPILER V9.60.7.0   LCD                                                               09/20/2023 16:44:28 PAGE 2   

  55   1            
  56   1            lcd_write_command(0x0E);
  57   1      
  58   1      }
  59          
  60          void lcd_init(void) {
  61   1      //  unsigned char i;
  62   1        lcd_write_command(LCD_FUNCTION_SET);
  63   1          delay_ms(20);
  64   1      
  65   1        lcd_write_command(LCD_DISPLAY_ON);
  66   1          delay_ms(20);
  67   1        
  68   1        lcd_write_command(LCD_FUNCTION_SET_8BIT);
  69   1          delay_ms(20);
  70   1      
  71   1        lcd_write_command(LCD_FUNCTION_SET_2LINE );
  72   1          delay_ms(20);
  73   1      
  74   1        lcd_write_command(LCD_FUNCTION_SET_5X8DOTS);
  75   1          delay_ms(20);
  76   1      
  77   1        lcd_write_command(LCD_DISPLAY_ON_OFF_CONTROL);
  78   1          delay_ms(20);
  79   1        
  80   1         lcd_clear();
  81   1          delay_ms(20);
  82   1        
  83   1        
  84   1      //  for (i = 0; i <8; i++) {
  85   1      //    lcd_write_symbol(i, specialcharacter[i]);
  86   1      //  }
  87   1                                                                                   // Entry mode set
  88   1        lcd_write_command(LCD_ENTRY_MODE_SET);
  89   1        //lcd_write_command(LCD_ENTRY_MODE_SET_INCREMENT);
  90   1      
  91   1      
  92   1      }
  93          
  94          void lcd_set_cursor(unsigned char row, unsigned char col) {
  95   1        
  96   1        unsigned char address;
  97   1        if (row == 0) {
  98   2          address = LCD_SET_DDRAM_ADDRESS | col;
  99   2        } else {
 100   2          address = LCD_SET_DDRAM_ADDRESS | (0x40 + col);
 101   2        }
 102   1        lcd_write_command(address);
 103   1      }
 104          
 105          void lcd_disp_numb(unsigned int Numb, unsigned char Length)
 106          {
 107   1          unsigned int divisor = 1;
 108   1          unsigned char q;
 109   1        
 110   1          for (i = 1; i < Length; i++) {
 111   2              divisor *= 10;
 112   2          }
 113   1      
 114   1          for (q = 0; q < Length; q++) {
 115   2              digit = (Numb / divisor) % 10;
 116   2              lcd_write_data(digit + '0');
C51 COMPILER V9.60.7.0   LCD                                                               09/20/2023 16:44:28 PAGE 3   

 117   2              divisor /= 10;
 118   2          }
 119   1      }
 120          
 121          
 122          void lcd_write_string(char *str) {
 123   1        unsigned int i = 0;
 124   1        while (str[i] != '\0') {
 125   2          lcd_write_data(str[i]);
 126   2          i++;
 127   2        }
 128   1      }
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
