C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 12:13:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include <intrins.h>
   5          #include "lcd.h"
   6          
   7          //#define  buzzer P1        // Define a bit for the buzzer
   8          
   9          sbit Servo_motor_Pin = P2^0; // Define a bit for the servo motor control pin
  10          sbit column1 = P1^0; // Define columns of the 4x4 keypad
  11          sbit column2 = P1^1;
  12          sbit column3 = P1^2;
  13          sbit column4 = P1^3;
  14          
  15          sbit row1 = P1^4; // Define rows of the 4x4 keypad
  16          sbit row2 = P1^5;
  17          sbit row3 = P1^6;
  18          sbit row4 = P1^7;
  19          
  20          unsigned char time_string[5] = {"00:00"};
  21          bit oven_started = 0;
  22          sbit door_switch = P3^0;
  23          sbit Relay_in = P2^0;
  24          
  25          char keypad[4][4] = {
  26              {'D', '=', '0', 'C'},
  27              {'C', '9', '8', '7'},
  28              {'B', '6', '5', '4'},
  29              {'A','3','2', '1'}
  30          };
  31          
  32          
  33          char timestring;
  34          
  35          char key_press() {
  36   1          char key = 0;
  37   1          row1 = 0; row2 = 1;row3 = 1;row4 = 1;
  38   1          if (column1 == 0) key = keypad[0][0];
  39   1          if (column2 == 0) key = keypad[0][1];
  40   1          if (column3 == 0) key = keypad[0][2];
  41   1          if (column4 == 0) key = keypad[0][3];
  42   1          row1 = 1; // Disable the first row
  43   1          
  44   1          row1 = 1;   row2 = 0;   row3 = 1;    row4 = 1;
  45   1      
  46   1          if (column1 == 0) key = keypad[1][0];
  47   1          if (column2 == 0) key = keypad[1][1];
  48   1          if (column3 == 0) key = keypad[1][2];
  49   1          if (column4 == 0) key = keypad[1][3];
  50   1        
  51   1          row2 = 1;   row1 = 1;    row2 = 1;    row3 = 0;     row4 = 1;
  52   1        
  53   1          if (column1 == 0) key = keypad[2][0];
  54   1          if (column2 == 0) key = keypad[2][1];
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 12:13:12 PAGE 2   

  55   1          if (column3 == 0) key = keypad[2][2];
  56   1          if (column4 == 0) key = keypad[2][3];
  57   1          
  58   1          row3 = 1;  row1 = 1;    row2 = 1;    row3 = 1;    row4 = 0;
  59   1          
  60   1          if (column1 == 0) key = keypad[3][0];
  61   1          if (column2 == 0) key = keypad[3][1];
  62   1          if (column3 == 0) key = keypad[3][2];
  63   1          if (column4 == 0) key = keypad[3][3];
  64   1          row4 = 1; // Disable the fourth row
  65   1          
  66   1          delay_ms(100);
  67   1          P1 = 0xFF;
  68   1          return key;
  69   1      }
  70          
  71            
  72          void display_time()
  73            {
  74   1        
  75   1              lcd_set_cursor(1,6);
  76   1              lcd_write_string(time_string);
  77   1              delay_ms(100);
  78   1        }
  79          
  80          
  81          void decrement_time() {                                       // Function to decrement time by 1 
  82   1          unsigned char min1 = time_string[0] - '0' ;
  83   1          unsigned char min0 = time_string[1] - '0';
  84   1          unsigned char sec1 = time_string[3] - '0';
  85   1          unsigned char sec0 = time_string[4] - '0';
  86   1        
  87   1        if (sec0 > 0) {
  88   2              sec0--;
  89   2          }
  90   1        
  91   1        else if (sec1 > 0) {
  92   2              sec0 = 9;
  93   2              sec1--;
  94   2          }
  95   1        
  96   1          else if (min0 > 0) {
  97   2              sec0 = 9;
  98   2              sec1 = 5;
  99   2              min0--;
 100   2          }
 101   1          
 102   1          else if (min1 > 0) {
 103   2              sec0 = 9;
 104   2              sec1 = 5;
 105   2              min0 = 9;
 106   2              min1--;
 107   2          }
 108   1          
 109   1          else {
 110   2              
 111   2              oven_started = 0;                       // Time is already 00:00, stop the oven
 112   2          }
 113   1       
 114   1          time_string[0] = min1 + '0';                 // Update the time_string
 115   1          time_string[1] = min0 + '0';
 116   1          time_string[3] = sec1 + '0';
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 12:13:12 PAGE 3   

 117   1          time_string[4] = sec0 + '0';
 118   1      
 119   1      }
 120          
 121          void main()
 122          {
 123   1        unsigned int index = 0;
 124   1        unsigned char key_count = 0;
 125   1        unsigned char key;  
 126   1        
 127   1        lcd_init();
 128   1        
 129   1        lcd_clear();
 130   1        lcd_set_cursor(0,1);
 131   1        lcd_write_string("oven control");
 132   1        //lcd_set_cursor(1,6);
 133   1        //lcd_write_string("00:00");
 134   1              
 135   1            
 136   1         while (1) {
 137   2           
 138   2      //    if (door_switch == 0){
 139   2      //      Relay_in = 0;
 140   2      //      delay_ms(5);
 141   2      
 142   2      //     }
 143   2      //     
 144   2      //    else {
 145   2      //      
 146   2      //     Relay_in = 1;
 147   2      //     delay_ms(5);
 148   2      //      
 149   2      //    }
 150   2      //    
 151   2      //     if (Relay_in == 1){
 152   2             
 153   2               key = key_press(); // Get a key press from the keypad
 154   2               
 155   2                  if (key != '\0' && key != '=' && key != 'C' && key != '*' ) {
 156   3                    
 157   3                      key_count++;
 158   3                    
 159   3                      if (key_count == 1) {
 160   4                        
 161   4                          time_string[4] = key;
 162   4                          display_time();
 163   4                      
 164   4                      }
 165   3                      
 166   3                      else if (key_count == 2){
 167   4                          time_string[3] = time_string[4];              
 168   4                          time_string[4] = key;
 169   4                          display_time();
 170   4                        
 171   4                        }
 172   3                      
 173   3                      else if (key_count == 3){
 174   4                        
 175   4                          time_string[1] = time_string[3];              
 176   4                          time_string[3] = time_string[4];              
 177   4                          time_string[4] = key;
 178   4                          display_time();             
C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 12:13:12 PAGE 4   

 179   4                        
 180   4                        }
 181   3                      
 182   3                      else if (key_count == 4){
 183   4                        
 184   4                          time_string[0] = time_string[1];              
 185   4                          time_string[1] = time_string[3];    
 186   4                          time_string[3] = time_string[4];                            
 187   4                          time_string[4] = key;
 188   4                          display_time();                   
 189   4                         
 190   4                        }
 191   3                  }
 192   2                  
 193   2                else if (key == '=')
 194   2                {
 195   3                  
 196   3                 time_string[0] =0 + '0';
 197   3                 time_string[1] =0 + '0';
 198   3                 time_string[3] =0 + '0';
 199   3                 time_string[4] =0 + '0';   
 200   3                 display_time();
 201   3                 break;       
 202   3                  
 203   3                }
 204   2                
 205   2                else if (key == 'C') {               // C key press kolo sara oven start kege aw stop kege
 206   3                  
 207   3                      if (oven_started) {
 208   4                          oven_started = 0;             // Pause the oven
 209   4                          Relay_in = 0;
 210   4                      }
 211   3                      
 212   3                      else {
 213   4                         if (door_switch ==1){
 214   5                          oven_started = 1;                // Start the oven
 215   5                          Relay_in = 1;
 216   5                        }
 217   4                   }
 218   3                }
 219   2                  if (oven_started) {           //oven start sho
 220   3      
 221   3                      decrement_time();
 222   3                      delay_ms(10);
 223   3                      display_time();
 224   3                      delay_ms(10);
 225   3                  }
 226   2                 delay_ms(100);
 227   2         }
 228   1       
 229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    448    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              09/07/2023 12:13:12 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
