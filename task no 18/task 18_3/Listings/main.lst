C51 COMPILER V9.60.7.0   MAIN                                                              08/31/2023 16:41:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include "lcd.h"
   4          #include <stdio.h>
   5          
   6          
   7          #define EEPROM_ADDRESS 0xA0
   8          
   9          sbit SDA = P2^0; // I2C Data pin
  10          sbit SCL = P2^1; // I2C Clock pin
  11          
  12          sbit disp_5 = P2^5;
  13          sbit disp_4 = P2^4;
  14          
  15          typedef unsigned char uchar;
  16          typedef unsigned int iint;
  17          typedef unsigned long ulong;
  18          
  19          void I2C_Init();
  20          void I2C_Start();
  21          void I2C_Stop();
  22          void I2C_Write(uchar dat);
  23          unsigned char I2C_ReadACK();
  24          
  25          void EEPROM_WriteByte(uchar address,uchar Data);
  26          unsigned char EEPROM_ReadByte(uchar address);
  27          
  28          uchar counterLow = 0;
  29          uchar counterHigh = 0;
  30          
  31          // I2C Start condition
  32          void I2C_Start() {
  33   1          SDA = 1;
  34   1          _nop_();
  35   1          SCL = 1;
  36   1          _nop_();
  37   1          SDA = 0;
  38   1          _nop_();
  39   1          SCL = 0;
  40   1          _nop_();_nop_();
  41   1      
  42   1      }
  43          
  44          // I2C Stop condition
  45          void I2C_Stop() {
  46   1         
  47   1          SDA = 0;
  48   1          _nop_();_nop_();
  49   1      
  50   1          SCL = 1;
  51   1          _nop_();_nop_();
  52   1      
  53   1          SDA = 1;
  54   1          _nop_();_nop_();
C51 COMPILER V9.60.7.0   MAIN                                                              08/31/2023 16:41:55 PAGE 2   

  55   1      
  56   1      }
  57          
  58          // I2C Initialization
  59          void I2C_Init(){
  60   1        
  61   1          I2C_Start(); 
  62   1          I2C_Stop();
  63   1        
  64   1      }
  65          
  66          
  67          void I2C_Write(unsigned char dat) {
  68   1          unsigned char i;
  69   1        
  70   1          for (i = 0; i < 8; i++) {
  71   2              SDA = (dat & 0x80) ? 1 : 0;
  72   2              _nop_();  _nop_();
  73   2      
  74   2              SCL = 1;
  75   2              _nop_();
  76   2              SCL = 0;
  77   2              _nop_();      
  78   2      
  79   2              SCL = 0;
  80   2              dat <<= 1;
  81   2      
  82   2          }
  83   1      
  84   1          // Wait for ACK from the slave
  85   1          SDA = 1;
  86   1          _nop_();
  87   1          SCL = 1;
  88   1          _nop_();
  89   1          SCL = 0;
  90   1      }
  91          
  92          unsigned char I2C_ReadACK() {
  93   1          uchar i, dat = 0;
  94   1          
  95   1          SDA = 1;
  96   1          for (i = 0; i < 8; i++) {
  97   2              _nop_();
  98   2              SCL = 1;
  99   2              _nop_();
 100   2              dat = (dat << 1) | SDA;
 101   2              SCL = 0;
 102   2          }
 103   1      
 104   1      //    SDA = 0;                         // Send ACK
 105   1      //    _nop_();
 106   1      //    SCL = 1;
 107   1      //    _nop_();
 108   1      //    SCL = 0;
 109   1          return dat;
 110   1      }
 111          
 112          
 113          
 114          void EEPROM_WriteByte(uchar address, uchar Data) {
 115   1          
 116   1      
C51 COMPILER V9.60.7.0   MAIN                                                              08/31/2023 16:41:55 PAGE 3   

 117   1          I2C_Start();
 118   1          I2C_Write(EEPROM_ADDRESS);
 119   1         // I2C_Write(EEPROM_ADDRESS | ((page_address & 0x07) << 1));
 120   1          I2C_Write(address);
 121   1          I2C_Write(Data);
 122   1          I2C_Stop();
 123   1        delay_ms(10);
 124   1      }
 125          
 126          unsigned char EEPROM_ReadByte(uchar address) {
 127   1          
 128   1          uchar Data;
 129   1      
 130   1          I2C_Start();
 131   1          I2C_Write(EEPROM_ADDRESS);
 132   1          I2C_Write(address);
 133   1        
 134   1          I2C_Start();
 135   1          I2C_Write(0xA0);
 136   1          Data = I2C_ReadACK();
 137   1          I2C_Stop();
 138   1      
 139   1          return Data;
 140   1      }
 141          
 142          void displaynumber(uchar num){
 143   1        uchar digitPatterns[] = {
 144   1          0x3F, // 0b00111111 - 0
 145   1          0x06, // 0b00000110 - 1
 146   1          0x5B, // 0b01011011 - 2
 147   1          0x4F, // 0b01001111 - 3
 148   1          0x66, // 0b01100110 - 4
 149   1          0x6D, // 0b01101101 - 5
 150   1          0x7D, // 0b01111101 - 6
 151   1          0x07, // 0b00000111 - 7
 152   1          0x7F, // 0b01111111 - 8
 153   1          0x6F  // 0b01101111 - 9
 154   1      
 155   1      };
 156   1      
 157   1        disp_5 = 0;
 158   1      
 159   1        P0 = digitPatterns[num];
 160   1      
 161   1      }
 162          
 163          void main() {
 164   1          ulong TotalWriteCycles;
 165   1          ulong WriteCyclesPerYear;
 166   1          ulong WriteCyclesPerDay; 
 167   1          ulong TimeBetweenWrites_ms;
 168   1      
 169   1          
 170   1            lcd_init();
 171   1            I2C_Init();
 172   1        
 173   1            counterLow = EEPROM_ReadByte(0x00);           
 174   1            counterHigh = EEPROM_ReadByte(0x01);           
 175   1            
 176   1            
 177   1            
 178   1            lcd_set_cursor(0,1);
C51 COMPILER V9.60.7.0   MAIN                                                              08/31/2023 16:41:55 PAGE 4   

 179   1            lcd_write_string("reading");
 180   1            lcd_write_data(counterLow);
 181   1            lcd_write_data(counterHigh);      
 182   1            
 183   1      
 184   1           TotalWriteCycles = 1000000UL;                                         // Total write cycles
 185   1           WriteCyclesPerYear = TotalWriteCycles / 10;                          // Write cycles per year
 186   1           WriteCyclesPerDay = WriteCyclesPerYear / 365;                       // Write cycles per day
 187   1           TimeBetweenWrites_ms = 24 * 60 * 60 * 1000 / WriteCyclesPerDay;    // Time between writes in millisec
             -onds  
 188   1        
 189   1          while(1){
 190   2            
 191   2            displaynumber(counterLow);
 192   2            counterLow++;
 193   2            
 194   2            EEPROM_WriteByte(0x00, counterHigh);
 195   2            EEPROM_WriteByte(0x01, counterLow);
 196   2            
 197   2            lcd_set_cursor(1,0);
 198   2            lcd_write_string("writing");
 199   2            lcd_write_data(counterHigh);
 200   2            lcd_write_data(counterLow);
 201   2      
 202   2       delay_ms(TimeBetweenWrites_ms);
 203   2      
 204   2        }
 205   1      }
 206          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    333    ----
   CONSTANT SIZE    =     26    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
