C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2023 14:38:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include "LCDh.h"
   5          
   6          void UART_Init();
   7          void UART_Receive();
   8          void displayTimeOnLCD(char *strTime);
   9          void displayDateOnLCD(char *strDate);
  10          
  11          unsigned char receivedData;  // Variable to store received data
  12          char receivedMessage[100];   // Buffer to store the received message
  13          unsigned int index = 0;      // Index for storing received characters in the buffer
  14          bit msgreceived = 0;
  15          void main()
  16          {
  17   1          //unsigned char hour, minute, second;  // Variables to store hour, minute, and second values
  18   1      
  19   1          lcd_init();       // Initialize LCD
  20   1          UART_Init();      // Initialize UART
  21   1      
  22   1          while(1)
  23   1          {
  24   2              UART_Receive();  // Receive data from UART
  25   2            
  26   2            if (msgreceived)
  27   2          {
  28   3              if (receivedData == 'n')  // Check if the receiveddata is a line feed
  29   3              {
  30   4                  receivedMessage[index] = '\0';  // Add null terminator to mark the end of the received message
  31   4      
  32   4                  // Message received completely
  33   4                  // Process the received message to extract hour, minute, and second values
  34   4                
  35   4                  // Display the time on the LCD
  36   4                
  37   4                if (receivedMessage[0]== 't'){
  38   5                  
  39   5                  displayTimeOnLCD(&receivedMessage[1]);
  40   5                }
  41   4                
  42   4                 //Display the Date on the LCD
  43   4                
  44   4                else if (receivedMessage[0]== 'd'){
  45   5                  
  46   5                  displayDateOnLCD(&receivedMessage[1]);
  47   5                }
  48   4      
  49   4                  // Reset the buffer and index for receiving the next message
  50   4                  index = 0;
  51   4                  memset(receivedMessage, 0, sizeof(receivedMessage));
  52   4                  msgreceived = 0;
  53   4              }
  54   3              
C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2023 14:38:58 PAGE 2   

  55   3              else
  56   3              {
  57   4                  // Message not complete, continue receiving
  58   4                  // Store the received character in the buffer
  59   4                  receivedMessage[index] = receivedData;
  60   4                  index++;
  61   4              }
  62   3            }
  63   2          
  64   2          else
  65   2          {
  66   3            lcd_write_string("nodata");
  67   3          }
  68   2        }
  69   1      }
  70          
  71          void UART_Init()
  72          {
  73   1          TMOD = 0x20;    // Timer 1 mode 2: 8-bit auto-reload
  74   1          TH1 = 0xFD;     // Set baud rate to 9600 bps for 11.0592 MHz crystal
  75   1          SCON = 0x50;    // 8-bit data, 1 stop bit, REN = 1
  76   1          TR1 = 1;        // Start timer
  77   1      }
  78          
  79          void UART_Receive()
  80          {
  81   1          while (RI == 0);        // Wait until reception is complete
  82   1          RI = 0;                // Clear reception flag
  83   1          receivedData = SBUF;   // Store received data
  84   1        msgreceived = 1;
  85   1      }
  86          
  87          void displayTimeOnLCD(char *timestring)
  88          {
  89   1          char timeformatted[10];  // Buffer to store the formatted time string
  90   1          unsigned int hour,minute, second;
  91   1          sscanf(timestring, "%hhu:%hhu:%hhu", &hour, &minute, &second);
  92   1      
  93   1          // Format the time string in "hh:mm:ss" format
  94   1          sprintf(timeformatted, "%02u:%02u:%02u", hour, minute, second);
  95   1      
  96   1          
  97   1          // Clear the LCD and display the time string
  98   1         // lcd_clear();
  99   1          lcd_set_cursor(0,0);
 100   1          lcd_write_string("Time:");
 101   1          lcd_set_cursor(0,5);
 102   1          lcd_write_string(timeformatted);
 103   1      
 104   1      }
 105          
 106          void displayDateOnLCD(char *datestring)
 107          {
 108   1          char dateformatted[12];  // Buffer to store the formatted time string
 109   1          unsigned int Day,Month,Year;
 110   1          sscanf(datestring, "%hhu:%hhu:%hhu", &Day, &Month,&Year);
 111   1      
 112   1          // Format the time string in "hh:mm:ss" format
 113   1          sprintf(dateformatted, "%02u:%02u:%04u", Day, Month, Year);
 114   1      
 115   1          
 116   1          // Clear the LCD and display the time string
C51 COMPILER V9.60.7.0   MAIN                                                              07/21/2023 14:38:58 PAGE 3   

 117   1          //lcd_clear();
 118   1          lcd_set_cursor(1,0);
 119   1          lcd_write_string("Date:");
 120   1          lcd_set_cursor(1,5);
 121   1          lcd_write_string(dateformatted);
 122   1      
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =    103      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
