C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2023 16:43:05 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "lcd.h"
   3          #include <string.h>
   4          #include <stdio.h>
   5          
   6          void UART_Init();
   7          void UART_receivedata();
   8          void UART_send_char(unsigned char character);
   9          void display_on_lcd(char *string);             //send msg cursor to the new position 
  10          
  11          unsigned char receivedata;
  12          //unsigned char receivemsg[100];
  13          unsigned int index = 0;
  14          bit messagerecieved = 0;
  15          
  16          unsigned int hr, min, sec, day, month, year;
  17          char time_str[12]; 
  18          unsigned int count = 0;
  19          
  20          
  21          
  22          void UART_Init()
  23          {
  24   1          TMOD = 0x20;    // Timer 1 mode 2: 8-bitauto-reload
  25   1          TH1 = 0xFD;     // Set baud rate to 9600 bps for 11.0592 MHz crystal
  26   1          SCON = 0x50;    // 8-bitdata, 1 stopbit, REN = 1
  27   1          TR1 = 1;        // Start timer
  28   1      }
  29          
  30          
  31          void UART_receivedata()
  32          {
  33   1          while (RI == 0);        // Wait until reception is complete
  34   1          RI = 0;                // Clear reception flag
  35   1          receivedata = SBUF;   // Store receiveddata
  36   1          messagerecieved = 1;
  37   1      
  38   1      }
  39          
  40          
  41          void display_on_lcd(char *string)           //send msg cursor to the new position 
  42          {
  43   1        lcd_write_string(string);
  44   1      }
  45          
  46          void timer_init()
  47          {
  48   1          TMOD = 0x01;
  49   1          TH0 = 0xFF;               // 100ms delay 
  50   1          TL0 = 0x9C;
  51   1          TR0 = 1; 
  52   1        
  53   1          ET0 = 1;
  54   1          EA = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2023 16:43:05 PAGE 2   

  55   1      }
  56          
  57          void update_lcd() {
  58   1      
  59   1        sprintf(time_str, "%02d:%02d:%02d", hr,min,sec);       //initiall values formatted shwe
  60   1          
  61   1          lcd_set_cursor(0, 0);
  62   1          lcd_write_string("RTC :");
  63   1          lcd_write_string(time_str);
  64   1      }
  65          
  66          int is_leaf_year(int year)
  67            {
  68   1        
  69   1          if(year % 4 == 0  && year % 100 == 0 || (year % 400 == 0))
  70   1          {
  71   2            return 1;
  72   2          }
  73   1          
  74   1          else {
  75   2            return 0;
  76   2          }
  77   1      }
  78          
  79          
  80          void int0_isr(void) interrupt 1
  81          {
  82   1        count++;                                          // Increment ka counter
  83   1      
  84   1        if(count == 10){                                   
  85   2          
  86   2            sec++;                            // Increment ka second
  87   2            if (sec >= 60){
  88   3                sec = 0;
  89   3                min++; 
  90   3              if (min >= 60){
  91   4                  min = 0;
  92   4                  hr++;
  93   4                if (hr >= 24){
  94   5                    hr = 0;
  95   5                    day++;
  96   5                  }  
  97   4                }
  98   3              }
  99   2               
 100   2      
 101   2            update_lcd();
 102   2            count = 0;
 103   2        }
 104   1         TF0 = 0;        // Clear Timer 0 interrupt flag
 105   1      }
 106          
 107          
 108          void separate_time(char *timestring)
 109            {
 110   1      
 111   1          sscanf(timestring, "%hhu:%hhu:%hhu", &hr, &min, &sec);
 112   1          
 113   1        }
 114          
 115          
 116          void main(){
C51 COMPILER V9.60.7.0   MAIN                                                              09/18/2023 16:43:05 PAGE 3   

 117   1          
 118   1          lcd_init();
 119   1          lcd_write_string("RTC from port");
 120   1          delay_ms(1000);
 121   1          lcd_clear();
 122   1        
 123   1          UART_Init();      // Initialize UART
 124   1      
 125   1          while(1){
 126   2            
 127   2          UART_receivedata();
 128   2            
 129   2            if(messagerecieved){
 130   3                
 131   3              if (receivedata == 'n'){
 132   4                
 133   4                 time_str[index] = '\0';
 134   4                 separate_time(&time_str[0]);
 135   4                
 136   4                  index = 0;                               // Reset the buffer and index for receiving the next 
             -message
 137   4                  memset(time_str, 0, sizeof(time_str));
 138   4                  messagerecieved = 0; 
 139   4                
 140   4                  timer_init();     //timer initialize sho zaka chi timestring recieve sho os ba counting kege
 141   4      
 142   4              }   
 143   3                
 144   3              else 
 145   3                {
 146   4                time_str[index] = receivedata;
 147   4                index++;  
 148   4               }
 149   3                
 150   3              
 151   3           }
 152   2            
 153   2           else {
 154   3                  display_on_lcd("nodata");
 155   3               }
 156   2        }
 157   1          
 158   1      
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
